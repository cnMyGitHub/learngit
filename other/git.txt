AdministratoreYJ]NINGN64/
5 git usage:git[--version][--help][-C <path>][-c <name>=<value>]
[--exec-path[=<path>]][--html-path][--man-path][--info-path][-pI--paginate l-Pl--no-pager][--no-replace-objects][--bare]
[--git-dir=<path>][--work-tree=<path>][--namespace=<name>]
<command>[<args>]

These are common Git commands used in various situations：

start a working area（see also:git help tutorial）
     clone: Clone a repository into a new directory
     init: Create an empty Git repository or reinitialize an existing one

work on the current change（see also：git help everyday）
     add: Add file contents to the index 
     mv: Move or rename a file，a directory，or a symlink 
     reset: Reset current HEAD to the specified state 
     rm: Remove files from the working tree and from the index 

examine the history and state（see also:git help revisions）
     bisect: use binary search to find the commit that introduced a bug 
     grep: Print lines matching a pattern
     log: Show commit logs 
     show: show various types of objects 
     status: show the working tree status

grow，mark and tweak your common history 
     branch: List，create，or delete branches 
     checkout: Switch branches or restore working tree files 
     commit: Record changes to the repository 
     diff: show changes between commits，commit and working tree，etc
     merge: Join two or more development histories together
     rebase: Reapply commits on top of another base tip
     tag: Create , list, delete or verify a tag object signed with GPG


collaborate（see also:qit help workflows）
    fetch: Download objects and refs from another repository 
    pull: Fetch from and integrate with another repository or a local branch 
    push: Update remote refs along with associated objects

‘git help-a'and'git help-g'list available subcommands and some concept guides.See'git help <command>'or'git help <concept>'
to read about a specific subcommand or concept.
